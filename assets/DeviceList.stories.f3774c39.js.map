{"version":3,"file":"DeviceList.stories.f3774c39.js","sources":["../../lib/device-list/AudioDeviceList.tsx","../../lib/device-list/VideoDeviceList.tsx","../../stories/DeviceList.stories.mdx"],"sourcesContent":["import { Mic } from '@mui/icons-material';\nimport { useGlobalContext } from '@provider';\nimport DeviceListPanel, { ICON_STYLE } from '@components/device-list-panel';\nimport useAudioDevices from '@hooks/useAudioDevices';\nimport type { ICommonProps } from '@type';\nimport type { FC } from 'react';\n\nexport interface IAudioDeviceListProps extends ICommonProps {\n    /**\n     * Callback fired when switching audio recording device.\n     */\n    onChange?: (deviceId: string) => void;\n}\n\nexport const AudioDeviceList: FC<IAudioDeviceListProps> = ({ onError, onChange, className, style }) => {\n    const [recordingDeviceList, recordingActiveDevice] = useAudioDevices(onError);\n    const { rcvEngine } = useGlobalContext();\n\n    const onAudioDeviceChange = async (deviceId: string) => {\n        if (onChange) {\n            onChange(deviceId);\n        } else {\n            try {\n                await rcvEngine?.getAudioDeviceManager().setRecordingDevice(deviceId);\n                await rcvEngine?.getMeetingController().getAudioController().enableAudio({ deviceId });\n            } catch (e) {\n                onError && onError(e);\n            }\n        }\n    };\n\n    return (\n        <DeviceListPanel\n            className={className}\n            defaultDevice={recordingActiveDevice}\n            deviceList={recordingDeviceList}\n            id={'id-audio-devices'}\n            style={style}\n            title='Select a microphone'\n            titleIcon={<Mic sx={ICON_STYLE} />}\n            onDeviceChange={onAudioDeviceChange}\n            onError={onError}\n        />\n    );\n};\n","import type { FC } from 'react';\nimport { Videocam } from '@mui/icons-material';\nimport { useGlobalContext, useMeetingContext } from '@provider';\nimport DeviceListPanel, { ICON_STYLE } from '@components/device-list-panel';\nimport useVideoDevices from '@hooks/useVideoDevices';\nimport type { ICommonProps } from '@type';\n\nexport interface IVideoDeviceListProps extends ICommonProps {\n    /**\n     * Callback fired when switching video device.\n     */\n    onChange?: (deviceId: string) => void;\n}\n\nexport const VideoDeviceList: FC<IVideoDeviceListProps> = ({ onError, onChange, className, style }) => {\n    const [videoDeviceList, videoActiveDevice] = useVideoDevices();\n    const { rcvEngine } = useGlobalContext();\n    const { state: meetingState } = useMeetingContext();\n\n    const handleChangeVideoDevice = async (deviceId: string) => {\n        if (onChange) {\n            onChange(deviceId);\n        } else {\n            try {\n                await rcvEngine?.getVideoDeviceManager().setVideoDevice(deviceId);\n                if (!meetingState.isVideoMuted) {\n                    await rcvEngine?.getMeetingController()\n                        .getVideoController()\n                        .unmuteLocalVideoStream({ deviceId });\n                }\n            } catch (e) {\n                onError && onError(e);\n            }\n        }\n    };\n\n    return (\n        <DeviceListPanel\n            className={className}\n            defaultDevice={videoActiveDevice}\n            deviceList={videoDeviceList}\n            id={'id-video-devices'}\n            style={style}\n            title='Select a camera'\n            titleIcon={<Videocam sx={ICON_STYLE} />}\n            onDeviceChange={handleChangeVideoDevice}\n            onError={onError}\n        />\n    );\n};\n","import { Meta, Story, ArgsTable } from '@storybook/addon-docs'\nimport { VideoDeviceList, AudioDeviceList } from '../lib'\n\n<Meta title={'Components/DeviceList'}></Meta>\n\n# VideoDeviceList\n\nThe `VideoDeviceList` component renders a preview of the local video devices. If there is no available video devices, the panel will be blank.\n\nA `VideoDeviceList` is typically used on a pre-meeting view, or a device settings page. The React SDK depends on the RingCentral Client SDK for JavaScript.\n\n> Notice: `VideoAction` component includes `VideoDeviceList` preview by default.\n\n## Snapshot\n\n<img src='./video-list.png' style={{ maxWidth: 300 }} />\n<img src='./video-list-with-action.png' style={{ maxWidth: 300 }} />\n\n## Importing\n\n```jsx\nimport { VideoDeviceList } from '@ringcentral/video-sdk-react'\n```\n\n## Usage\n\n```jsx\nimport React from 'react'\nimport { VideoDeviceList, RcvEngineProvider } from '@ringcentral/video-sdk-react'\n\nconst App = () => {\n    return (\n        <RcvEngineProvider rcvEngine={rcvEngine}>\n            <VideoDeviceList />\n        </RcvEngineProvider>\n    )\n}\n```\n\n### Props\n\n<ArgsTable of={VideoDeviceList} />\n\n# AudioDeviceList\n\nThe `AudioDeviceList` component renders a preview of the local audio recording devices. If there is no available audio recording devices, the panel will be blank.\n\nA `AudioDeviceList` is typically used on a pre-meeting view, or a device settings page. The React SDK depends on the RingCentral Client SDK for JavaScript.\n\n> Notice: `AudioAction` component includes `AudioDeviceList` preview by default.\n\n## Snapshot\n\n<img src='./audio-list.png' style={{ maxWidth: 300 }} />\n<img src='./audio-list-with-action.png' style={{ maxWidth: 300 }} />\n\n## Importing\n\n```jsx\nimport { AudioDeviceList } from '@ringcentral/video-sdk-react'\n```\n\n## Usage\n\n```jsx\nimport React from 'react'\nimport { AudioDeviceList, RcvEngineProvider } from '@ringcentral/video-sdk-react'\n\nconst App = () => {\n    return (\n        <RcvEngineProvider rcvEngine={rcvEngine}>\n            <AudioDeviceList />\n        </RcvEngineProvider>\n    )\n}\n```\n\n### Props\n\n<ArgsTable of={AudioDeviceList} />\n"],"names":["AudioDeviceList","onError","onChange","className","style","recordingDeviceList","recordingActiveDevice","useAudioDevices","rcvEngine","useGlobalContext","DeviceListPanel","defaultDevice","deviceList","id","title","titleIcon","Mic","sx","ICON_STYLE","onDeviceChange","__name","deviceId","getAudioDeviceManager","setRecordingDevice","getMeetingController","getAudioController","enableAudio","e","VideoDeviceList","videoDeviceList","videoActiveDevice","useVideoDevices","state","meetingState","useMeetingContext","Videocam","getVideoDeviceManager","setVideoDevice","isVideoMuted","getVideoController","unmuteLocalVideoStream","layoutProps","MDXLayout","MDXContent","components","props","mdx","_extends","mdxType","Meta","parentName","src","maxWidth","ArgsTable","of","isMDXComponent","__page","Error","parameters","docsOnly","componentMeta","includeStories","mdxStoryNameToKey","docs","page","AddContext","mdxComponentAnnotations","__namedExportsOrder"],"mappings":"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"}