{"version":3,"file":"Gallery.stories.3de7e402.js","sources":["../../node_modules/.pnpm/@mui+material@5.11.10_fbxtuirhogpez7m7qjkm3itwca/node_modules/@mui/material/useMediaQuery/useMediaQuery.js","../../lib/provider/index.tsx","../../stories/bootstrap/utils/local-storage.ts","../../stories/bootstrap/app.config.js","../../stories/bootstrap/utils/auth.ts","../../stories/bootstrap/utils/create-engine.ts","../../stories/bootstrap/components/start-meeting/index.tsx","../../stories/bootstrap/components/auth-form/index.tsx","../../stories/bootstrap/components/meeting-wrapper/utils.ts","../../stories/bootstrap/components/in-meeting/index.tsx","../../stories/bootstrap/components/meeting-loading/index.tsx","../../stories/bootstrap/components/meeting-wrapper/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n\n  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","import type { PropsWithChildren } from 'react';\nimport type React from 'react';\nimport { UIWrapperContextProvider } from './ui-wrapper';\n\nimport { GlobalContext } from './global';\nimport { MeetingContextProvider } from './meeting';\nimport type { RcvEngine } from '@ringcentral/video-sdk';\nimport { AvatarContextProvider } from './avatar';\nimport { StreamProvider } from './stream';\n\nexport const RcvEngineProvider: React.FC<PropsWithChildren<{\n  rcvEngine: RcvEngine | null;\n  localeConfig?: Record<string, string>;\n  waitingRoomContent?: React.ReactNode;\n  /**\n   * Callback fired when an exception is thrown from the element.\n   * @param error The error object.\n   */\n  onError?: (error: any) => void;\n}>> = ({ rcvEngine, localeConfig, waitingRoomContent, onError, children }) => {\n  return (\n    <GlobalContext.Provider value={{\n      rcvEngine,\n      localeConfig,\n      waitingRoomContent,\n      onError: onError,\n    }}>\n      <UIWrapperContextProvider>\n        <StreamProvider>\n          <AvatarContextProvider>\n            <MeetingContextProvider>\n              {children}\n            </MeetingContextProvider>\n          </AvatarContextProvider>\n        </StreamProvider>\n      </UIWrapperContextProvider>\n    </GlobalContext.Provider>\n  );\n};\n\nexport * from './global';\nexport * from './meeting';\nexport * from './ui-wrapper';\n","const getStorage = (isPermanent: boolean) => (isPermanent ? localStorage : sessionStorage);\n\nexport const KEY_AUTH = 'AUTH_KEY';\nexport const KEY_AUTH_FORM = 'KEY_AUTH_FORM';\nexport const KEY_MEETING_ID = 'MEETING_ID';\nexport const KEY_MEETING_PASSWORD = 'MEETING_PASSWORD';\n\nexport function readLocallyStored<T>(\n    name: string,\n    defaultValue?: T,\n    isPermanent = true\n): T | undefined {\n    if (typeof localStorage !== 'object' || typeof sessionStorage !== 'object') return defaultValue;\n\n    let raw;\n    if (typeof isPermanent === 'undefined') {\n        raw = getStorage(true).getItem(name) || getStorage(false).getItem(name);\n    } else {\n        raw = getStorage(isPermanent).getItem(name);\n    }\n    return raw ? JSON.parse(raw) : defaultValue;\n}\n\nexport const writeLocallyStored = (\n    name: string,\n    val: unknown = null,\n    isPermanent = true\n): void => {\n    getStorage(isPermanent).setItem(name, JSON.stringify(val));\n};\n\nexport const removeLocallyStored = (name: string, isPermanent = true): void => {\n    getStorage(isPermanent).setItem(name, '');\n};\n","const config = {\n    clientId: '',\n    clientSecret: '',\n    jwt: '',\n    username: '',\n    password: '',\n};\n\nexport default config;","import config from '../app.config';\nimport { KEY_AUTH_FORM, readLocallyStored } from './local-storage';\n\nexport interface IAuth {\n    authType: string\n    clientId: string\n    clientSecret: string\n    jwt: string\n    token?: any\n    username?: string\n    password?: string\n    external?: any\n    grantType?: string\n}\n\nexport enum Auth_Type {\n    PASSWORD= 'PASSWORD',\n    TOKEN = 'TOKEN',\n    JWT = 'JWT'\n}\n\nexport function getDefaultAuthFormData():IAuth{\n    const defaultAuthFromStorage = readLocallyStored<IAuth>(KEY_AUTH_FORM, undefined, true);\n    return {\n        authType: defaultAuthFromStorage?.authType || Auth_Type.JWT,\n        clientId: defaultAuthFromStorage?.clientId || config?.clientId || '',\n        clientSecret: defaultAuthFromStorage?.clientSecret || config?.clientSecret || '',\n        token: defaultAuthFromStorage?.token || config?.token,\n        username: defaultAuthFromStorage?.username || config?.username,\n        password: defaultAuthFromStorage?.password || config?.password,\n        jwt: defaultAuthFromStorage?.jwt || config?.jwt,\n        external: defaultAuthFromStorage?.external || config?.external,\n        grantType: defaultAuthFromStorage?.grantType || config?.grantType,\n    };\n}\n","import { GrantType, RcvEngine } from '@ringcentral/video-sdk';\nimport config from '../app.config';\nimport type { IAuth } from './auth';\nimport { Auth_Type } from './auth';\n\nexport async function createRcvEngine(auth: IAuth) {\n    RcvEngine.instance()?.destroy();\n    const rcv = RcvEngine.create({\n        enableDiscovery: false,\n        origin: config.origin || 'https://platform.ringcentral.com',\n        ...auth,\n        external: {\n            ...auth.external,\n            ...config.dev\n        },\n    });\n    if (auth.authType === Auth_Type.TOKEN) {\n        await rcv.setAuthToken(JSON.stringify(auth.token));\n    } else if (auth.authType === Auth_Type.JWT) {\n        await rcv.authorize({\n            grantType: GrantType.JWT,\n            jwt: auth.jwt,\n        });\n    } else {\n        await rcv.authorize({\n            grantType: GrantType.PASSWORD,\n            username: auth.username,\n            password: auth.password,\n        });\n    }\n    console.debug('createRcvEngine called and got: ', rcv);\n    return rcv;\n}\n","import type React from 'react';\nimport { useState } from 'react';\nimport {Paper, Button, TextField } from '@mui/material';\nimport type { RcvEngine} from '@ringcentral/video-sdk';\nimport { KEY_MEETING_ID, KEY_MEETING_PASSWORD, readLocallyStored } from '../../utils';\n\nexport interface IStartMeetingProps{\n    rcvEngine: RcvEngine;\n    onClear: () => void;\n    onJoinMeeting: (rcvEngine: RcvEngine, meetingId?: string, password?: string) => void;\n    onStartMeeting: (rcvEngine: RcvEngine) => void;\n}\n\nexport function StartMeeting({ onClear, rcvEngine, onStartMeeting, onJoinMeeting }: IStartMeetingProps){\n    const [meetingId, setMeetingId] = useState(readLocallyStored<string>(KEY_MEETING_ID, undefined, true));\n    const [password, setPassword] = useState(readLocallyStored<string>(KEY_MEETING_PASSWORD, undefined, true));\n\n    return (\n        <>\n            <Paper elevation={1} style={{ padding: 16, display: 'flex'}}>\n                <TextField\n                    className='item'\n                    label='Meeting Id'\n                    size={'small'}\n                    style={{width: 200, marginRight: 4}}\n                    value={meetingId}\n                    variant='outlined'\n                    onChange={(e) => setMeetingId(e.target.value)}\n                />\n                <TextField\n                    className='item'\n                    label='Password'\n                    size={'small'}\n                    style={{width: 200, marginRight: 4}}\n                    value={password}\n                    variant='outlined'\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <Button style={{marginRight: 4}} variant='contained' onClick={() => {\n                    onJoinMeeting(rcvEngine, meetingId, password);\n                }}>\n                    Join\n                </Button>\n                <Button style={{marginRight: 4}} variant='outlined' onClick={() => {\n                    onStartMeeting(rcvEngine);\n                }}>\n                    Start a Meeting\n                </Button>\n                <Button style={{marginRight: 4}} variant='text' onClick={onClear}>Reset</Button>\n            </Paper>\n        </>\n    );\n}\n","import type React from 'react';\nimport { useState } from 'react';\nimport { Button, FormControl, InputLabel, MenuItem, Select, TextareaAutosize, TextField } from '@mui/material';\nimport type { IAuth } from '../../utils/auth';\nimport { Auth_Type, getDefaultAuthFormData } from '../../utils/auth';\nimport { KEY_AUTH_FORM, writeLocallyStored } from '../../utils';\nimport './index.css';\n\ninterface IAuthFormProps {\n    onSubmit: (authInfo: IAuth) => void;\n}\n\nexport function AuthForm({ onSubmit }: IAuthFormProps) {\n    const defaultAuth = getDefaultAuthFormData();\n    const [tokenInString, setTokenInString] = useState<string>(JSON.stringify(defaultAuth.token));\n    const [externalInString, setExternalInString] = useState<string>(JSON.stringify(defaultAuth.external));\n    const [authInfo, setAuthInfo] = useState<IAuth>(defaultAuth);\n\n    const handleSubmit = () => {\n        const toSubmitAuthInfo = {\n            ...authInfo,\n        };\n        if (authInfo.authType === Auth_Type.TOKEN && tokenInString) {\n            toSubmitAuthInfo.token = JSON.parse(tokenInString);\n        }\n        if (externalInString) {\n            toSubmitAuthInfo.external = JSON.parse(externalInString) || {};\n        }\n        if (authInfo.authType === Auth_Type.PASSWORD) {\n            toSubmitAuthInfo.grantType = 'PASSWORD';\n        }\n        writeLocallyStored(KEY_AUTH_FORM, toSubmitAuthInfo);\n        onSubmit(toSubmitAuthInfo);\n    };\n\n    const renderAuthForm = () => {\n        switch (authInfo.authType) {\n            case Auth_Type.TOKEN:\n                return <>\n                    <TextField fullWidth={true} label={'clientId'} placeholder={'your clientID'} size='small' type='text' value={authInfo.clientId}\n                        variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, clientId: e.target.value })}\n                    />\n                    <div className={'br'} />\n                    <TextField fullWidth={true} label='clientSecret' placeholder={'your client secret'} size='small' type='text'\n                        value={authInfo.clientSecret} variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, clientSecret: e.target.value })}\n                    />\n                    <div className={'br'} />\n                    <h3>Token</h3>\n                    <TextareaAutosize maxRows={20} minRows={8} placeholder={'your token'} style={{ width: '100%' }} value={tokenInString}\n                        onChange={e => setTokenInString(e.target.value)}\n                    />\n                </>\n            case Auth_Type.JWT:\n                return <>\n                    <TextField fullWidth={true} label={'clientId'} placeholder={'your clientID'} size='small' type='text'\n                        value={authInfo.clientId}\n                        variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, clientId: e.target.value })}\n                    />\n                    <div className={'br'} />\n                    <TextField fullWidth={true} label='clientSecret' placeholder={'your client secret'} size='small' type='text'\n                        value={authInfo.clientSecret} variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, clientSecret: e.target.value })}\n                    />\n                    <div className={'br'} />\n                    <TextField fullWidth={true} label='JWT' placeholder={'your jwt'} size='small' type='text' value={authInfo.jwt}\n                        variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, jwt: e.target.value })}\n                    />\n                </>\n            case Auth_Type.PASSWORD:\n                return <>\n                    <TextField fullWidth={true} label={'clientId'} placeholder={'your clientID'} size='small' type='text'\n                        value={authInfo.clientId}\n                        variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, clientId: e.target.value })}\n                    />\n                    <div className={'br'} />\n                    <TextField fullWidth={true} label='clientSecret' placeholder={'your client secret'} size='small' type='text'\n                        value={authInfo.clientSecret} variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, clientSecret: e.target.value })}\n                    />\n                    <div className={'br'} />\n                    <TextField fullWidth={true} label='username' placeholder={'your username'} size='small' type='text' value={authInfo.username}\n                        variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, username: e.target.value })}\n                    />\n                    <div className={'br'} />\n                    <TextField fullWidth={true} label='password' placeholder={'your password'} size='small' type='text' value={authInfo.password}\n                        variant={'outlined'}\n                        onChange={e => setAuthInfo({ ...authInfo, password: e.target.value })}\n                    />\n                </>\n            default:\n                return [];\n        }\n\n    }\n\n    return (\n        <>\n            <FormControl>\n                <InputLabel>Auth Type</InputLabel>\n                <Select\n                    label='Auth Type'\n                    size='small'\n                    value={authInfo.authType}\n                    onChange={e => setAuthInfo({\n                        ...authInfo,\n                        authType: e.target.value as Auth_Type,\n                    })}>\n                    <MenuItem value={Auth_Type.JWT}>{Auth_Type.JWT}</MenuItem>\n                    <MenuItem value={Auth_Type.PASSWORD}>{Auth_Type.PASSWORD}</MenuItem>\n                    <MenuItem value={Auth_Type.TOKEN}>{Auth_Type.TOKEN}</MenuItem>\n                </Select>\n            </FormControl>\n            <div className={'br'} />\n            {renderAuthForm()}\n            <h3>External config</h3>\n            <TextareaAutosize\n                maxRows={20}\n                minRows={8}\n                style={{ width: '100%' }}\n                value={externalInString}\n                onChange={e => setExternalInString(e.target.value)}\n            />\n            <div className={'br'} />\n            <Button variant='contained' onClick={handleSubmit}>Init Config</Button>\n        </>\n    );\n}\n","import type { RcvEngine } from '@ringcentral/video-sdk';\nimport { RcvMeetingState } from '@ringcentral/video-sdk';\n\nexport function getInitRcvFromWindow(): RcvEngine | undefined {\n    const rcv = window.rcv;\n    console.debug('get rcvEngine from window and got: ', rcv);\n    return rcv;\n}\n\nexport function checkIsInMeeting(rcvEngine?: RcvEngine): boolean {\n    try {\n        const res = rcvEngine?.getMeetingController()?.getMeetingState() === RcvMeetingState.MEETING_STATE_INMEETING;\n        console.debug('check isInMeeting: ', res);\n        return res;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function getMeetingId(rcvEngine?: RcvEngine): string | undefined {\n    try {\n        const res = (rcvEngine?.getMeetingController() as any)?._bridge.pins.web;\n        console.debug('get meeting id from from rcvEngine and got', res);\n        return res;\n    } catch (e) {\n        return undefined;\n    }\n}\n","import type React from 'react';\nimport { Paper, Button } from '@mui/material';\nimport { RcvEngineProvider } from '@provider';\nimport type { RcvEngine} from '@ringcentral/video-sdk';\n\nexport interface InMeetingProps{\n    meetingId: string;\n    rcvEngine: RcvEngine;\n    onReset: () => void;\n    children: React.ReactNode;\n}\n\nexport function InMeeting({ onReset, children, rcvEngine, meetingId }: InMeetingProps){\n    return (\n        <>\n            <Paper elevation={1} style={{ left: 8, top: 8, position: 'absolute', zIndex: 100, padding: 8 }}>\n                <b>{meetingId}</b>\n                <Button variant='text' onClick={onReset}>Reset</Button>\n            </Paper>\n            <RcvEngineProvider\n                localeConfig={{\n                    chat_dialog_title: 'My chat'\n                }}\n                rcvEngine={rcvEngine}\n                onError={(error) => {\n                  console.error('UI error happens', error);\n                }}>\n                {/* waitingRoomContent={<p>my waiting room</p>}> */}\n                {children}\n            </RcvEngineProvider>\n        </>\n    );\n}\n","import type React from 'react';\nimport { CircularProgress, Box, Button } from '@mui/material';\n\nexport interface IMeetingLoadingProps{\n    meetingId?: string;\n    onReset: () => void;\n}\n\nexport function MeetingLoading({meetingId, onReset}: IMeetingLoadingProps) {\n    return (\n        <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '200px',\n        }}>\n            <CircularProgress />\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginTop: 8\n            }}>\n                <div style={{marginRight: 8}}>Joining meeting {meetingId ? `: ${meetingId}` : ''}</div>\n                <Button variant='text' onClick={onReset}>Reset</Button>\n            </div>\n        </Box>\n    );\n}\n","import { KEY_AUTH, KEY_MEETING_ID, KEY_MEETING_PASSWORD, readLocallyStored, removeLocallyStored, writeLocallyStored } from '../../utils';\nimport type { PropsWithChildren } from 'react';\nimport type React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport type { RcvEngine } from '@ringcentral/video-sdk';\nimport type { IAuth } from '../../utils/auth';\nimport { createRcvEngine } from '../../utils/create-engine';\nimport { StartMeeting } from '../start-meeting';\nimport { AuthForm } from '../auth-form';\nimport { checkIsInMeeting, getInitRcvFromWindow, getMeetingId } from './utils';\nimport { InMeeting } from '../in-meeting';\nimport { EngineEvent } from '@ringcentral/video-sdk';\nimport { MeetingLoading } from '../meeting-loading';\n\nconst MeetingWrapper: React.FC<PropsWithChildren> = ({ children }) => {\n    const [rcvEngine, setRcvEngine] = useState<RcvEngine | undefined>(getInitRcvFromWindow());\n    const [isJoiningMeeting, setIsJoiningMeeting] = useState<boolean>(false);\n    const [inMeeting, setInMeeting] = useState<boolean>(checkIsInMeeting(rcvEngine));\n    const [meetingId, setMeetingId] = useState<string | undefined>(getMeetingId(rcvEngine));\n    const [auth, setAuth] = useState<IAuth | undefined>(window.auth);\n\n    const meetingPwRef = useRef(null);\n\n    // bind listeners\n    useEffect(() => {\n        if (rcvEngine) {\n            console.debug(`addEventListener ${EngineEvent.MEETING_JOINED} to rcvEngine`);\n            rcvEngine.on(EngineEvent.MEETING_JOINED, (meetingId) => {\n                console.debug(`event ${EngineEvent.MEETING_JOINED} triggered with data: ${meetingId}`);\n                setMeetingId(meetingId);\n                setInMeeting(true);\n                writeLocallyStored(KEY_MEETING_ID, meetingId);\n                writeLocallyStored(KEY_MEETING_PASSWORD, meetingPwRef.current);\n            });\n            console.debug(`addEventListener ${EngineEvent.MEETING_JOINED} to rcvEngine`);\n            rcvEngine.on(EngineEvent.MEETING_LEFT, () => {\n                console.debug(`event ${EngineEvent.MEETING_LEFT} triggered`);\n                setMeetingId('');\n                setInMeeting(false);\n                writeLocallyStored(KEY_MEETING_ID, '');\n                writeLocallyStored(KEY_MEETING_PASSWORD, '');\n            });\n        }\n    }, [rcvEngine]);\n\n    // rejoin a meeting on refresh\n    useEffect(() => {\n        const rejoinMeeting = async () => {\n            if (window.rcv) {\n                console.debug('got rcvEngine from window, no need to rejoin a meeting');\n                return;\n            }\n            const defaultAuthFromStorage = readLocallyStored<IAuth>(KEY_AUTH, undefined, true);\n            if (defaultAuthFromStorage) {\n                console.debug('got auth info from local storage, will init rcvEngine automatically');\n                await handleSubmitAuth(defaultAuthFromStorage);\n                const rcv = await handleInitRcv(defaultAuthFromStorage);\n                const meetingId = readLocallyStored<string>(KEY_MEETING_ID, undefined, true);\n                const password = readLocallyStored<string>(KEY_MEETING_PASSWORD, undefined, true);\n                if (meetingId) {\n                    console.debug(`got meetingId from local storage, will rejoin meeting ${meetingId}`);\n                    await handleJoinMeeting(rcv, meetingId, password);\n                }\n            }\n        };\n        rejoinMeeting().then();\n    }, []);\n\n    const handleStartMeeting = async (rcvEngine: RcvEngine) => {\n        setIsJoiningMeeting(true);\n        console.debug('start meeting');\n        await rcvEngine.startInstantMeeting();\n        setIsJoiningMeeting(false);\n    };\n\n    const handleJoinMeeting = async (rcvEngine: RcvEngine, meetingId?: string, password?: string) => {\n        if (!meetingId) {\n            alert('Meeting id can not be empty!');\n            return;\n        }\n        setMeetingId(meetingId);\n        setIsJoiningMeeting(true);\n        console.debug(`join meeting with meetingId: ${meetingId}`);\n        meetingPwRef.current = password;\n        await rcvEngine.joinMeeting(meetingId, password ? { password }: {});\n        setIsJoiningMeeting(false);\n    };\n\n    const handleSubmitAuth = async (authInfo: IAuth): Promise<IAuth> => {\n        window.auth = authInfo;\n        setAuth(authInfo);\n        writeLocallyStored(KEY_AUTH, authInfo, true);\n        return authInfo;\n    };\n\n    const handleInitRcv = async (authInfo: IAuth): Promise<RcvEngine> => {\n        const rcv = await createRcvEngine({\n            ...authInfo,\n        });\n        window.rcv = rcv;\n        setRcvEngine(rcv);\n        return rcv;\n    };\n\n    const handleReset = () => {\n        removeLocallyStored(KEY_AUTH);\n        removeLocallyStored(KEY_MEETING_ID);\n        rcvEngine?.destroy();\n        setRcvEngine(undefined);\n        setAuth(undefined);\n        window.rcv = undefined;\n        window.auth = undefined;\n    };\n\n    if (isJoiningMeeting) {\n        return <MeetingLoading meetingId={meetingId} onReset={handleReset} />;\n    }\n    if (rcvEngine) {\n        if (inMeeting && meetingId) {\n            return <InMeeting meetingId={meetingId} rcvEngine={rcvEngine} onReset={handleReset}>{children}</InMeeting>;\n        } else if (!inMeeting) {\n            return <StartMeeting rcvEngine={rcvEngine} onClear={handleReset} onJoinMeeting={handleJoinMeeting}\n                onStartMeeting={handleStartMeeting}\n                   />;\n        }\n    }\n    if (!auth) {\n        return (\n            <div style={{padding: '1em'}}>\n                <AuthForm\n                    onSubmit={async (authInfo) => {\n                        await handleSubmitAuth(authInfo);\n                        await handleInitRcv(authInfo);\n                    }}\n                />\n            </div>\n        );\n    }\n    return <p>loading...</p>;\n};\n\nexport default MeetingWrapper;\n"],"names":["useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","React.useState","useEnhancedEffect","active","queryList","updateMatch","__name","maybeReactUseSyncExternalStore","React","useMediaQueryNew","getDefaultSnapshot","React.useCallback","getServerSnapshot","React.useMemo","matches","getSnapshot","subscribe","mediaQueryList","notify","useMediaQuery","queryInput","options","theme","useTheme","supportMatchMedia","getThemeProps","RcvEngineProvider","rcvEngine","localeConfig","waitingRoomContent","onError","children","_jsx","GlobalContext","Provider","value","UIWrapperContextProvider","StreamProvider","AvatarContextProvider","MeetingContextProvider","getStorage","isPermanent","KEY_AUTH","KEY_AUTH_FORM","KEY_MEETING_ID","KEY_MEETING_PASSWORD","readLocallyStored","name","defaultValue","raw","writeLocallyStored","val","removeLocallyStored","config","Auth_Type","getDefaultAuthFormData","defaultAuthFromStorage","createRcvEngine","auth","RcvEngine","rcv","GrantType","StartMeeting","onClear","onStartMeeting","meetingId","setMeetingId","useState","password","setPassword","_Fragment","_jsxs","Paper","TextField","e","Button","onJoinMeeting","AuthForm","onSubmit","defaultAuth","tokenInString","setTokenInString","externalInString","setExternalInString","authInfo","setAuthInfo","handleSubmit","toSubmitAuthInfo","renderAuthForm","clientId","clientSecret","TextareaAutosize","jwt","username","FormControl","InputLabel","Select","authType","MenuItem","JWT","PASSWORD","TOKEN","getInitRcvFromWindow","checkIsInMeeting","res","_a","RcvMeetingState","getMeetingId","InMeeting","onReset","console","MeetingLoading","Box","CircularProgress","MeetingWrapper","setRcvEngine","isJoiningMeeting","setIsJoiningMeeting","inMeeting","setInMeeting","setAuth","window","meetingPwRef","useRef","useEffect","debug","EngineEvent","MEETING_JOINED","on","current","MEETING_LEFT","undefined","handleSubmitAuth","handleInitRcv","handleJoinMeeting","rejoinMeeting","then","handleStartMeeting","startInstantMeeting","alert","joinMeeting","handleReset","destroy","style","padding"],"mappings":"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"}