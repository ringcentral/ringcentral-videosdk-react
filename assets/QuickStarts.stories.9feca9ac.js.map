{"version":3,"file":"QuickStarts.stories.9feca9ac.js","sources":["../../stories/QuickStarts.stories.mdx"],"sourcesContent":["import { Meta, Story } from '@storybook/addon-docs'\nimport {\n    ActionBar,\n    AudioAction,\n    ChatAction,\n    LeaveAction,\n    LogoIcon,\n    MeetingInfoAction,\n    ParticipantAction,\n    RecordAction,\n    VideoAction,\n    GalleryLayout,\n    GalleryLayoutType,\n} from '../lib'\n\n<Meta title={'Quick Starts'}></Meta>\n\n# Getting Started\n\nThis section explains how to use the RingCentral SDK React Components Library for some common use cases.\n\n<iframe src=\"https://codesandbox.io/embed/video-sdk-react-sample-d4sv9v?fontsize=14&hidenavigation=1&theme=dark\"\n        style={{\n            width: '100%',\n            height: 500,\n            border: 0,\n            borderRadius: 4,\n            overflow: 'hidden',\n            marginBottom: 20\n        }}\n        title=\"video-sdk-react-sample\"\n        allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n        sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n></iframe>\n\n## Step 1: Inject rcv instance and render UI components when in meeting\n\nTo implement a audio/video communications experience, you need to initialize a `@ringcentral/video-sdk` instance firstly.\n\nAfter join or start a meeting, inject the rcvEngine instance into `@ringcentral/video-sdk-react` provider - `RcvEngineProvider`.\nThen you finsh setting up the video meeting.\n\n```jsx\n// App.jsx\nimport { createRoot } from \"react-dom/client\";\nimport { useEffect, useState } from \"react\";\nimport { RcvEngine, EngineEvent, GrantType } from \"@ringcentral/video-sdk\";\nimport {\n  RcvEngineProvider,\n  ActionBar,\n  AudioAction,\n  ChatAction,\n  LeaveAction,\n  LogoIcon,\n  MeetingInfoAction,\n  ParticipantAction,\n  RecordAction,\n  VideoAction,\n  GalleryLayout,\n  GalleryLayoutType\n} from \"@ringcentral/video-sdk-react\";\nimport StartView from \"./StartView\";\n\nimport \"@ringcentral/video-sdk-react/dist/esm/index.css\";\nimport \"./styles.css\";\n\nconst config = {\n  clientId: \"xxx\",\n  clientSecret: \"xxx\",\n  jwt: 'xxx'\n};\n\nfunction App() {\n  const [rcvEngine, setRcvEngine] = useState<RcvEngine | null>(null);\n  const [meetingId, setMeetingId] = useState(\"\");\n\n  useEffect(() => {\n    const initSDK = async () => {\n      const { clientId, clientSecret, jwt } = config;\n      // You could open 'enableDiscovery' and set 'discoveryServer' if neccessary\n      const engine = RcvEngine.create({\n        clientId,\n        clientSecret,\n        enableDiscovery: false\n      }) as RcvEngine;\n      // if config jwt, initialize SDK with jwt\n      // else initialize SDK with password\n      await engine.authorize({\n        grantType: GrantType.JWT,\n        jwt\n      });\n      engine.on(EngineEvent.MEETING_JOINED, (meetingId, errorCode) => {\n        // do something\n        setMeetingId(meetingId);\n      });\n      engine.on(EngineEvent.MEETING_LEFT, () => {\n        // do something\n        setMeetingId(\"\");\n      });\n      setRcvEngine(engine);\n    };\n\n    initSDK().then();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {meetingId && rcvEngine ? (\n        <div\n          className={\"meeting-container\"}\n          style={{ position: \"relative\", height: \"100%\" }}\n        >\n          <RcvEngineProvider rcvEngine={rcvEngine}>\n            <GalleryLayout layout={GalleryLayoutType.gallery} />\n            <ActionBar\n              leftActions={[<MeetingInfoAction key={\"meeting-info-action\"} />]}\n              centerActions={[\n                <AudioAction key={\"audio-action\"} />,\n                <VideoAction key={\"video-action\"} />,\n                <ParticipantAction key={\"participant-action\"} />,\n                <ChatAction key={\"chat-action\"} />,\n                <RecordAction key={\"record-action\"} />,\n                <LeaveAction key={\"leave-action\"} />\n              ]}\n              rightActions={[<LogoIcon key={\"logo-icon\"} />]}\n            />\n          </RcvEngineProvider>\n        </div>\n      ) : (\n        rcvEngine && <StartView rcvEngine={rcvEngine} />\n      )}\n    </div>\n  );\n}\n```\n\n## Step 2: Join or start a meeting by rcvEngine instance.\n\nAll the UI components need meeting datas. So it should start or join a meeting secondly and ensure to complete the meeting controller initialization.\n\n```jsx\n// InMeeting.jsx\nimport React, { FC, useState, useRef } from \"react\";\nimport { RcvEngine } from \"@ringcentral/video-sdk\";\n\ninterface IProps {\n  rcvEngine: RcvEngine;\n}\n\nconst StartView: FC<IProps> = (props) => {\n  const { rcvEngine } = props;\n  const inputMeetingIdRef = useRef(null);\n\n  cconst startMeetingHandler = async () => {\n    try {\n      await rcvEngine.startInstantMeeting();\n    } catch (e) {\n      alert(`Error occurs due to :${e.message}`);\n    }\n  };\n\n  const joinMeetingHandler = async () => {\n    if (!inputMeetingIdRef?.current?.value.trim()) {\n      alert(\"Meeting id can not be empty!\");\n      return;\n    }\n    try {\n      await rcvEngine.joinMeeting(inputMeetingIdRef.current.value);\n    } catch (e) {\n      console.error(\"Error occurs due to\");\n    }\n  };\n\n  return (\n    <div>\n      <input ref={inputMeetingIdRef} />\n      <button onClick={startMeetingHandler}>start meeting</button>\n      <button onClick={joinMeetingHandler}>join meeting</button>\n    </div>\n  );\n};\n\nexport default StartView;\n```\n\n## Step 3: Meeting View is rendered successfully\n\n<div\n    style={{\n        display: 'flex',\n        width: '100%',\n        height: '300px',\n        flexDirection: 'column',\n        boxSizing: 'border-box',\n    }}>\n    <GalleryLayout\n        layout={GalleryLayoutType.gallery}\n        style={{\n            flex: 1,\n        }}\n    />\n    <ActionBar\n        leftActions={[<MeetingInfoAction key={'meeting-info-action'} />]}\n        centerActions={[\n            <AudioAction key={'audio-action'} />,\n            <VideoAction key={'video-action'} />,\n            <ParticipantAction key={'participant-action'} />,\n            <ChatAction key={'chat-action'} />,\n            <RecordAction key={'record-action'} />,\n            <LeaveAction key={'leave-action'} />,\n        ]}\n        rightActions={[<LogoIcon key={'logo-icon'} text=\"demo\" />]}\n    />\n</div>\n\n"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdx","_extends","mdxType","Meta","title","src","style","width","height","border","borderRadius","overflow","marginBottom","allow","sandbox","parentName","display","flexDirection","boxSizing","GalleryLayout","layout","GalleryLayoutType","gallery","flex","ActionBar","leftActions","MeetingInfoAction","key","centerActions","AudioAction","VideoAction","ParticipantAction","ChatAction","RecordAction","LeaveAction","rightActions","LogoIcon","text","isMDXComponent","__page","Error","parameters","docsOnly","componentMeta","includeStories","mdxStoryNameToKey","docs","page","AddContext","mdxComponentAnnotations","__namedExportsOrder"],"mappings":"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"}